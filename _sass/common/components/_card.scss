
.card {
  //max-width: 18rem;
  //border-radius: map-get($base, border-radius);
  border: $card-border-width solid $card-border-color;
  border-radius: $card-border-radius;
  //@include border-radius($card-border-radius);
  //@include box-shadow();
  justify-content: center;

  position: relative;
  display: flex;
  flex-direction: column;
  min-width: 0;
  word-wrap: break-word;

  @include transition(box-shadow map-get($animation, duration) map-get($animation, timing-function));
  & > :first-child {
    border-top-left-radius: 0; //map-get($base, border-radius);
    border-top-right-radius: 0; //map-get($base, border-radius);
  }
  & > :last-child {
    border-bottom-right-radius: 0; //map-get($base, border-radius);
    border-bottom-left-radius: 0;//map-get($base, border-radius);
  }
}


.card-body {
  // Enable `flex-grow: 1` for decks and groups so that card blocks take up
  // as much space as possible, ensuring footers are aligned to the bottom.
  flex: 1 1 auto;
  padding: $card-spacer-x;
  justify-content: center;
}

.card-title {
  margin-bottom: $card-spacer-y;
}

.card-subtitle {
  margin-top: -($card-spacer-y / 2);
  margin-bottom: 0;
}

.card-text:last-child {
  margin-bottom: 0;
}


.cell {
  & > .card {
    max-width: unset;
  }
}

.card__content {
  padding: map-get($spacers, 2) map-get($spacers, 3);
}

.card__header, .card__header > a {
  @include link-colors($text-color-d, $main-color-1);
}

.card__image {
  position: relative;
  width: 100%;
  & > img {
    display: block;
    width: 100%;
    height: auto;
    border-radius: 0;//inherit;
    border-top-radius: 0;
  }
  & > .overlay {
    position: absolute;
    width: 100%;
    max-height: 100%;
    padding: map-get($spacers, 2);
    a {
      text-decoration: none !important;
    }
  }
  & > .overlay, & > .overlay--top {
    top: 0;
    bottom: auto;
    border-top-left-radius: inherit;
    border-top-right-radius: inherit;
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }
  & > .overlay--bottom {
    top: auto;
    bottom: 0;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: inherit;
    border-bottom-left-radius: inherit;
  }
  & > .overlay--full {
    top: 0;
    bottom: 0;
  }
  & > .overlay, & > .overlay--dark {
    @extend .text--dark;
    background-color: rgba(#000, .4);
  }
  & > .overlay--light {
    @extend .text--light;
    background: rgba(#fff, .4);
  }
}

.card--clickable {
  cursor: pointer;
  @include hover() {
    @include box-shadow(2);
    .card__image {
      & > img {
        height: inherit;
      }
    }
  }
  @include transition(map-get($clickable, transition));
}

.card--flat {
  @include box-shadow(0);
  .card__image {
    & > img {
      border-radius: map-get($base, border-radius);
    }
  }
  .card__content {
    padding-top: 0;
    padding-left: 0;
  }
}

// Card image caps
.card-img-top {
  //width: 100%; // Required because we use flexbox and this inherently applies align-self: stretch
  //height: 15rem;
  //object-fit: cover;
  margin: auto;
  border-top-radius: 0; //$card-inner-border-radius);
  border-radius: 0px;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  //justify-content: center;
  margin-left: auto;
  margin-right: auto;
  display: block;
  -moz-border-radius: 0px;
  -webkit-border-radius: 0px;
}


// Card deck

.card-deck {
  display: flex;
  flex-direction: column;

  .card {
    margin-bottom: $card-deck-margin;
  }

  @include media-breakpoint-up(sm) {
    flex-flow: row wrap;
    margin-right: -$card-deck-margin;
    margin-left: -$card-deck-margin;

    .card {
      display: flex;
      // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
      flex: 1 0 0%;
      flex-direction: column;
      margin-right: $card-deck-margin;
      margin-bottom: 0; // Override the default
      margin-left: $card-deck-margin;
    }
  }
}

//
// Card groups
//

.card-group {
  display: flex;
  flex-direction: column;

  // The child selector allows nested `.card` within `.card-group`
  // to display properly.
  > .card {
    margin-bottom: $card-group-margin;
  }

  @include media-breakpoint-up(sm) {
    flex-flow: row wrap;
    // The child selector allows nested `.card` within `.card-group`
    // to display properly.
    > .card {
      // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
      flex: 1 0 0%;
      margin-bottom: 0;

      + .card {
        margin-left: 0;
        border-left: 0;
      }
    }
  }
}



//
// Columns
//

.card-columns {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: space-between;
  .card {
    margin-bottom: 0; //$card-columns-margin;
  }


  @include media-breakpoint-up(sm) {
    column-count: 4; //$card-columns-count;
    column-gap: 0; //$card-columns-gap;
    orphans: 1;
    widows: 1;
    row-gap: 1em; 

    .card {
      display: inline-block; // Don't let them vertically span multiple columns
      width: 100%; // Don't let their width change
    }
  }


  column-count: 3;
}


.cards {

  display: grid;

  grid-template-columns: repeat(auto-fill, 1fr);

  grid-auto-rows: auto;

  grid-gap: 1rem;
}

//
// Accordion
//

.accordion {
  .card:not(:first-of-type):not(:last-of-type) {
    border-bottom: 0;
    border-radius: 0;
  }

  .card:not(:first-of-type) {
    .card-header:first-child {
      border-radius: 0;
    }
  }

  .card:first-of-type {
    border-bottom: 0;
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }

  .card:last-of-type {
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }
}
